[tox]
minversion = 3.2.0
envlist = py37,pep8
ignore_basepython_conflict = True

[testenv]
basepython = python3
whitelist_externals =
  find
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/ussuri}
  -r{toxinidir}/test-requirements.txt
commands =
  find . -type f -name "*.pyc" -delete
  stestr run --slowest {posargs}

[testenv:py35-functional-etcd3gw]
basepython = python3.5
commands =
  find . -type f -name "*.pyc" -delete
  {toxinidir}/tools/setup-etcd-env.sh pifpaf -e OSLO_CACHE_TEST run etcd --  stestr run --slowest functional.*

[testenv:pep8]
deps = {[testenv]deps}
commands =
  flake8
  # Run security linter
  bandit -r oslo_cache -x tests -n5

[testenv:venv]
commands = {posargs}

[testenv:docs]
whitelist_externals = rm
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/ussuri}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -fr doc/build
  sphinx-build --keep-going -b html doc/source doc/build/html

[testenv:cover]
setenv =
  PYTHON=coverage run --source oslo_cache --parallel-mode
commands =
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

[flake8]
show-source = True
ignore = H405,W504,F405
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
import_exceptions =

[testenv:releasenotes]
whitelist_externals =
  rm
deps = {[testenv:docs]deps}
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees --keep-going -b html releasenotes/source releasenotes/build/html
